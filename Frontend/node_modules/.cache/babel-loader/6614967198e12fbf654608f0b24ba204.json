{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\";\nimport \"./VImg.css\"; // Components\n\nimport { VResponsive } from \"../VResponsive/index.mjs\"; // Directives\n\nimport intersect from \"../../directives/intersect/index.mjs\"; // Composables\n\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\n\nimport { computed, nextTick, onBeforeMount, ref, vShow, watch, withDirectives } from 'vue';\nimport { convertToUnit, defineComponent, SUPPORTS_INTERSECTION, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VImg = defineComponent({\n  name: 'VImg',\n  directives: {\n    intersect\n  },\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined\n      })\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: ''\n    },\n    srcset: String,\n    width: [String, Number],\n    ...makeTransitionProps()\n  },\n  emits: ['loadstart', 'load', 'error'],\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const currentSrc = ref(''); // Set from srcset\n\n    const image = ref();\n    const state = ref(props.eager ? 'loading' : 'idle');\n    const naturalWidth = ref();\n    const naturalHeight = ref();\n    const normalisedSrc = computed(() => {\n      return props.src && typeof props.src === 'object' ? {\n        src: props.src.src,\n        srcset: props.srcset || props.src.srcset,\n        lazySrc: props.lazySrc || props.src.lazySrc,\n        aspect: Number(props.aspectRatio || props.src.aspect)\n      } : {\n        src: props.src,\n        srcset: props.srcset,\n        lazySrc: props.lazySrc,\n        aspect: Number(props.aspectRatio || 0)\n      };\n    });\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value / naturalHeight.value || 0;\n    });\n    watch(() => props.src, () => {\n      init(state.value !== 'idle');\n    }); // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init());\n\n    function init(isIntersecting) {\n      if (props.eager && isIntersecting) return;\n      if (SUPPORTS_INTERSECTION && !isIntersecting && !props.eager) return;\n      state.value = 'loading';\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image();\n        lazyImg.src = normalisedSrc.value.lazySrc;\n        pollForSize(lazyImg, null);\n      }\n\n      if (!normalisedSrc.value.src) return;\n      nextTick(() => {\n        var _image$value, _image$value2;\n\n        emit('loadstart', ((_image$value = image.value) == null ? void 0 : _image$value.currentSrc) || normalisedSrc.value.src);\n\n        if ((_image$value2 = image.value) != null && _image$value2.complete) {\n          if (!image.value.naturalWidth) {\n            onError();\n          }\n\n          if (state.value === 'error') return;\n          if (!aspectRatio.value) pollForSize(image.value, null);\n          onLoad();\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value);\n          getSrc();\n        }\n      });\n    }\n\n    function onLoad() {\n      var _image$value3;\n\n      getSrc();\n      state.value = 'loaded';\n      emit('load', ((_image$value3 = image.value) == null ? void 0 : _image$value3.currentSrc) || normalisedSrc.value.src);\n    }\n\n    function onError() {\n      var _image$value4;\n\n      state.value = 'error';\n      emit('error', ((_image$value4 = image.value) == null ? void 0 : _image$value4.currentSrc) || normalisedSrc.value.src);\n    }\n\n    function getSrc() {\n      const img = image.value;\n      if (img) currentSrc.value = img.currentSrc || img.src;\n    }\n\n    function pollForSize(img) {\n      let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      const poll = () => {\n        const {\n          naturalHeight: imgHeight,\n          naturalWidth: imgWidth\n        } = img;\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth;\n          naturalHeight.value = imgHeight;\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout);\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1;\n          naturalHeight.value = 1;\n        }\n      };\n\n      poll();\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover\n    }));\n\n    const __image = () => {\n      var _slots$sources;\n\n      if (!normalisedSrc.value.src || state.value === 'idle') return null;\n\n      const img = _createVNode(\"img\", {\n        \"class\": ['v-img__img', containClasses.value],\n        \"src\": normalisedSrc.value.src,\n        \"srcset\": normalisedSrc.value.srcset,\n        \"alt\": \"\",\n        \"sizes\": props.sizes,\n        \"ref\": image,\n        \"onLoad\": onLoad,\n        \"onError\": onError\n      }, null);\n\n      const sources = (_slots$sources = slots.sources) == null ? void 0 : _slots$sources.call(slots);\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [withDirectives(sources ? _createVNode(\"picture\", {\n          \"class\": \"v-img__picture\"\n        }, [sources, img]) : img, [[vShow, state.value === 'loaded']])]\n      });\n    };\n\n    const __preloadImage = () => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [normalisedSrc.value.lazySrc && state.value !== 'loaded' && _createVNode(\"img\", {\n        \"class\": ['v-img__img', 'v-img__img--preload', containClasses.value],\n        \"src\": normalisedSrc.value.lazySrc,\n        \"alt\": \"\"\n      }, null)]\n    });\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [(state.value === 'loading' || state.value === 'error' && !slots.error) && _createVNode(\"div\", {\n          \"class\": \"v-img__placeholder\"\n        }, [slots.placeholder()])]\n      });\n    };\n\n    const __error = () => {\n      if (!slots.error) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [state.value === 'error' && _createVNode(\"div\", {\n          \"class\": \"v-img__error\"\n        }, [slots.error()])]\n      });\n    };\n\n    const __gradient = () => {\n      if (!props.gradient) return null;\n      return _createVNode(\"div\", {\n        \"class\": \"v-img__gradient\",\n        \"style\": {\n          backgroundImage: `linear-gradient(${props.gradient})`\n        }\n      }, null);\n    };\n\n    const isBooted = ref(false);\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true;\n            });\n          });\n          stop();\n        }\n      });\n    }\n    useRender(() => _withDirectives(_createVNode(VResponsive, {\n      \"class\": ['v-img', {\n        'v-img--booting': !isBooted.value\n      }],\n      \"style\": {\n        width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width)\n      },\n      \"aspectRatio\": aspectRatio.value,\n      \"aria-label\": props.alt,\n      \"role\": props.alt ? 'img' : undefined\n    }, {\n      additional: () => _createVNode(_Fragment, null, [_createVNode(__image, null, null), _createVNode(__preloadImage, null, null), _createVNode(__gradient, null, null), _createVNode(__placeholder, null, null), _createVNode(__error, null, null)]),\n      default: slots.default\n    }), [[_resolveDirective(\"intersect\"), {\n      handler: init,\n      options: props.options\n    }, null, {\n      once: true\n    }]]));\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight\n    };\n  }\n\n});","map":{"version":3,"mappings":";AAAA,oB,CAEA;;SACSA,mB,4BAET;;OACOC,e,wCAEP;;SACSC,qBAAqBC,uB,oCAE9B;;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,cAPF,QAQO,KARP;SAUEC,eACAC,iBACAC,uBACAC,iB,wBAGF;;AAWA,OAAO,MAAMC,IAAI,GAAGH,eAAe,CAAC;EAClCI,IAAI,EAAE,MAD4B;EAGlCC,UAAU,EAAE;IAAEhB;EAAF,CAHsB;EAKlCiB,KAAK,EAAE;IACLC,WAAW,EAAE,CAACC,MAAD,EAASC,MAAT,CADR;IAELC,GAAG,EAAEF,MAFA;IAGLG,KAAK,EAAEC,OAHF;IAILC,KAAK,EAAED,OAJF;IAKLE,QAAQ,EAAEN,MALL;IAMLO,OAAO,EAAEP,MANJ;IAOLQ,OAAO,EAAE;MACPC,IAAI,EAAEC,MADC;MAEP;MACA;MACAC,OAAO,EAAE,OAAO;QACdC,IAAI,EAAEC,SADQ;QAEdC,UAAU,EAAED,SAFE;QAGdE,SAAS,EAAEF;MAHG,CAAP;IAJF,CAPJ;IAiBLG,KAAK,EAAEhB,MAjBF;IAkBLiB,GAAG,EAAE;MACHR,IAAI,EAAE,CAACT,MAAD,EAASU,MAAT,CADH;MAEHC,OAAO,EAAE;IAFN,CAlBA;IAsBLO,MAAM,EAAElB,MAtBH;IAuBLmB,KAAK,EAAE,CAACnB,MAAD,EAASC,MAAT,CAvBF;IAyBL,GAAGnB,mBAAmB;EAzBjB,CAL2B;EAiClCsC,KAAK,EAAE,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,CAjC2B;;EAmClCC,KAAK,CAAEvB,KAAF,QAA0B;IAAA,IAAjB;MAAEwB,IAAF;MAAQC;IAAR,IAAiBC;IAC7B,MAAMC,UAAU,GAAGtC,GAAG,CAAC,EAAD,CAAtB,CAD6B,CACF;;IAC3B,MAAMuC,KAAK,GAAGvC,GAAG,EAAjB;IACA,MAAMwC,KAAK,GAAGxC,GAAG,CAA0CW,KAAK,CAACO,KAANP,GAAc,SAAdA,GAA0B,MAApE,CAAjB;IACA,MAAM8B,YAAY,GAAGzC,GAAG,EAAxB;IACA,MAAM0C,aAAa,GAAG1C,GAAG,EAAzB;IAEA,MAAM2C,aAAa,GAAG9C,QAAQ,CAAY,MAAM;MAC9C,OAAOc,KAAK,CAACmB,GAANnB,IAAa,OAAOA,KAAK,CAACmB,GAAb,KAAqB,QAAlCnB,GACH;QACAmB,GAAG,EAAEnB,KAAK,CAACmB,GAANnB,CAAUmB,GADf;QAEAC,MAAM,EAAEpB,KAAK,CAACoB,MAANpB,IAAgBA,KAAK,CAACmB,GAANnB,CAAUoB,MAFlC;QAGAX,OAAO,EAAET,KAAK,CAACS,OAANT,IAAiBA,KAAK,CAACmB,GAANnB,CAAUS,OAHpC;QAIAwB,MAAM,EAAE9B,MAAM,CAACH,KAAK,CAACC,WAAND,IAAqBA,KAAK,CAACmB,GAANnB,CAAUiC,MAAhC;MAJd,CADGjC,GAMD;QACFmB,GAAG,EAAEnB,KAAK,CAACmB,GADT;QAEFC,MAAM,EAAEpB,KAAK,CAACoB,MAFZ;QAGFX,OAAO,EAAET,KAAK,CAACS,OAHb;QAIFwB,MAAM,EAAE9B,MAAM,CAACH,KAAK,CAACC,WAAND,IAAqB,CAAtB;MAJZ,CANN;IAD4B,EAA9B;IAcA,MAAMC,WAAW,GAAGf,QAAQ,CAAC,MAAM;MACjC,OAAO8C,aAAa,CAACE,KAAdF,CAAoBC,MAApBD,IAA8BF,YAAY,CAACI,KAAbJ,GAAsBC,aAAa,CAACG,KAAlEF,IAA4E,CAAnF;IAD0B,EAA5B;IAIAzC,KAAK,CAAC,MAAMS,KAAK,CAACmB,GAAb,EAAkB,MAAM;MAC3BgB,IAAI,CAACN,KAAK,CAACK,KAANL,KAAgB,MAAjB,CAAJM;IADG,EAAL5C,CAzB6B,CA4B7B;;IAEAH,aAAa,CAAC,MAAM+C,IAAI,EAAX,CAAb/C;;IAEA,SAAS+C,IAAT,CAAeC,cAAf,EAAyC;MACvC,IAAIpC,KAAK,CAACO,KAANP,IAAeoC,cAAnB,EAAmC;MACnC,IACEzC,qBAAqB,IACrB,CAACyC,cADDzC,IAEA,CAACK,KAAK,CAACO,KAHT,EAIE;MAEFsB,KAAK,CAACK,KAANL,GAAc,SAAdA;;MAEA,IAAIG,aAAa,CAACE,KAAdF,CAAoBvB,OAAxB,EAAiC;QAC/B,MAAM4B,OAAO,GAAG,IAAIC,KAAJ,EAAhB;QACAD,OAAO,CAAClB,GAARkB,GAAcL,aAAa,CAACE,KAAdF,CAAoBvB,OAAlC4B;QACAE,WAAW,CAACF,OAAD,EAAU,IAAV,CAAXE;MACD;;MAED,IAAI,CAACP,aAAa,CAACE,KAAdF,CAAoBb,GAAzB,EAA8B;MAE9BhC,QAAQ,CAAC,MAAM;QAAA;;QACbqC,IAAI,CAAC,WAAD,EAAc,sBAAK,CAACU,KAAN,kCAAaP,UAAb,KAA2BK,aAAa,CAACE,KAAdF,CAAoBb,GAA7D,CAAJK;;QAEA,qBAAII,KAAK,CAACM,KAAV,aAAIM,cAAaC,QAAjB,EAA2B;UACzB,IAAI,CAACb,KAAK,CAACM,KAANN,CAAYE,YAAjB,EAA+B;YAC7BY,OAAO;UACR;;UAED,IAAIb,KAAK,CAACK,KAANL,KAAgB,OAApB,EAA6B;UAE7B,IAAI,CAAC5B,WAAW,CAACiC,KAAjB,EAAwBK,WAAW,CAACX,KAAK,CAACM,KAAP,EAAc,IAAd,CAAXK;UACxBI,MAAM;QARR,OASO;UACL,IAAI,CAAC1C,WAAW,CAACiC,KAAjB,EAAwBK,WAAW,CAACX,KAAK,CAACM,KAAP,CAAXK;UACxBK,MAAM;QACP;MAfK,EAARzD;IAiBD;;IAED,SAASwD,MAAT,GAAmB;MAAA;;MACjBC,MAAM;MACNf,KAAK,CAACK,KAANL,GAAc,QAAdA;MACAL,IAAI,CAAC,MAAD,EAAS,uBAAK,CAACU,KAAN,mCAAaP,UAAb,KAA2BK,aAAa,CAACE,KAAdF,CAAoBb,GAAxD,CAAJK;IACD;;IAED,SAASkB,OAAT,GAAoB;MAAA;;MAClBb,KAAK,CAACK,KAANL,GAAc,OAAdA;MACAL,IAAI,CAAC,OAAD,EAAU,uBAAK,CAACU,KAAN,mCAAaP,UAAb,KAA2BK,aAAa,CAACE,KAAdF,CAAoBb,GAAzD,CAAJK;IACD;;IAED,SAASoB,MAAT,GAAmB;MACjB,MAAMC,GAAG,GAAGjB,KAAK,CAACM,KAAlB;MACA,IAAIW,GAAJ,EAASlB,UAAU,CAACO,KAAXP,GAAmBkB,GAAG,CAAClB,UAAJkB,IAAkBA,GAAG,CAAC1B,GAAzCQ;IACV;;IAED,SAASY,WAAT,CAAsBM,GAAtB,EAA2E;MAAA,IAA9BC,OAA8B,uEAAL,GAAK;;MACzE,MAAMC,IAAI,GAAG,MAAM;QACjB,MAAM;UAAEhB,aAAa,EAAEiB,SAAjB;UAA4BlB,YAAY,EAAEmB;QAA1C,IAAuDJ,GAA7D;;QAEA,IAAIG,SAAS,IAAIC,QAAjB,EAA2B;UACzBnB,YAAY,CAACI,KAAbJ,GAAqBmB,QAArBnB;UACAC,aAAa,CAACG,KAAdH,GAAsBiB,SAAtBjB;QAFF,OAGO,IAAI,CAACc,GAAG,CAACJ,QAAL,IAAiBZ,KAAK,CAACK,KAANL,KAAgB,SAAjC,IAA8CiB,OAAO,IAAI,IAA7D,EAAmE;UACxEI,UAAU,CAACH,IAAD,EAAOD,OAAP,CAAVI;QADK,OAEA,IAAIL,GAAG,CAAClB,UAAJkB,CAAeM,QAAfN,CAAwB,MAAxBA,KAAmCA,GAAG,CAAClB,UAAJkB,CAAeO,UAAfP,CAA0B,oBAA1BA,CAAvC,EAAwF;UAC7Ff,YAAY,CAACI,KAAbJ,GAAqB,CAArBA;UACAC,aAAa,CAACG,KAAdH,GAAsB,CAAtBA;QACD;MAXH;;MAcAgB,IAAI;IACL;;IAED,MAAMM,cAAc,GAAGnE,QAAQ,CAAC,OAAO;MACrC,qBAAqBc,KAAK,CAACK,KADU;MAErC,uBAAuB,CAACL,KAAK,CAACK;IAFO,CAAP,CAAD,CAA/B;;IAKA,MAAMiD,OAAO,GAAG,MAAM;MAAA;;MACpB,IAAI,CAACtB,aAAa,CAACE,KAAdF,CAAoBb,GAArB,IAA4BU,KAAK,CAACK,KAANL,KAAgB,MAAhD,EAAwD,OAAO,IAAP;;MAExD,MAAMgB,GAAG;QAAA,SAEE,CAAC,YAAD,EAAeQ,cAAc,CAACnB,KAA9B,CAFF;QAAA,OAGCF,aAAa,CAACE,KAAdF,CAAoBb,GAHrB;QAAA,UAIIa,aAAa,CAACE,KAAdF,CAAoBZ,MAJxB;QAAA,OAKD,EALC;QAAA,SAMGpB,KAAK,CAACkB,KANT;QAAA,OAOCU,KAPD;QAAA,UAQIe,MARJ;QAAA,WASKD;MATL,QAAT;;MAaA,MAAMa,OAAO,qBAAG9B,KAAK,CAAC8B,OAAT,qBAAGC,0BAAhB;MAEA;QAAA,cACgCxD,KAAK,CAACyD,UADtC;QAAA;MAAA;QAAA5C,gBAGMrB,cAAc,CACZ+D,OAAO;UAAA,SACY;QADZ,IAC+BA,OAD/B,EAC0CV,GAD1C,KAEHA,GAHQ,EAIZ,CAAC,CAACvD,KAAD,EAAQuC,KAAK,CAACK,KAANL,KAAgB,QAAxB,CAAD,CAJY,CAHpB;MAAA;IAlBF;;IAgCA,MAAM6B,cAAc,GAAG;MAAA,cACS1D,KAAK,CAACyD;IADf;MAAA5C,gBAEjBmB,aAAa,CAACE,KAAdF,CAAoBvB,OAApBuB,IAA+BH,KAAK,CAACK,KAANL,KAAgB,QAA/CG;QAAA,SAES,CAAC,YAAD,EAAe,qBAAf,EAAsCqB,cAAc,CAACnB,KAArD,CAFT;QAAA,OAGQF,aAAa,CAACE,KAAdF,CAAoBvB,OAH5B;QAAA,OAIM;MAJN,QAFiB;IAAA,EAAvB;;IAYA,MAAMkD,aAAa,GAAG,MAAM;MAC1B,IAAI,CAAClC,KAAK,CAACmC,WAAX,EAAwB,OAAO,IAAP;MAExB;QAAA,cACgC5D,KAAK,CAACyD,UADtC;QAAA;MAAA;QAAA5C,gBAEM,CAACgB,KAAK,CAACK,KAANL,KAAgB,SAAhBA,IAA8BA,KAAK,CAACK,KAANL,KAAgB,OAAhBA,IAA2B,CAACJ,KAAK,CAACoC,KAAjE;UAAA,SACS;QADT,IACgCpC,KAAK,CAACmC,WAANnC,EADhC,EAFN;MAAA;IAHF;;IAYA,MAAMqC,OAAO,GAAG,MAAM;MACpB,IAAI,CAACrC,KAAK,CAACoC,KAAX,EAAkB,OAAO,IAAP;MAElB;QAAA,cACgC7D,KAAK,CAACyD,UADtC;QAAA;MAAA;QAAA5C,gBAEMgB,KAAK,CAACK,KAANL,KAAgB,OAAhBA;UAAA,SACW;QADX,IAC4BJ,KAAK,CAACoC,KAANpC,EAD5B,EAFN;MAAA;IAHF;;IAYA,MAAMsC,UAAU,GAAG,MAAM;MACvB,IAAI,CAAC/D,KAAK,CAACQ,QAAX,EAAqB,OAAO,IAAP;MAErB;QAAA,SAAkB,iBAAlB;QAAA,SAA2C;UAAEwD,eAAe,EAAG,mBAAkBhE,KAAK,CAACQ,QAAS;QAArD;MAA3C;IAHF;;IAMA,MAAMyD,QAAQ,GAAG5E,GAAG,CAAC,KAAD,CAApB;IACA;MACE,MAAM6E,IAAI,GAAG3E,KAAK,CAACU,WAAD,EAAckE,GAAG,IAAI;QACrC,IAAIA,GAAJ,EAAS;UACP;UACAC,qBAAqB,CAAC,MAAM;YAC1BA,qBAAqB,CAAC,MAAM;cAC1BH,QAAQ,CAAC/B,KAAT+B,GAAiB,IAAjBA;YADmB,EAArBG;UADmB,EAArBA;UAKAF,IAAI;QACL;MATe,EAAlB;IAWD;IAEDtE,SAAS,CAAC;MAAA,SAEC,CACL,OADK,EAEL;QAAE,kBAAkB,CAACqE,QAAQ,CAAC/B;MAA9B,CAFK,CAFD;MAAA,SAMC;QAAEb,KAAK,EAAE5B,aAAa,CAACO,KAAK,CAACqB,KAANrB,KAAgB,MAAhBA,GAAyB8B,YAAY,CAACI,KAAtClC,GAA8CA,KAAK,CAACqB,KAArD;MAAtB,CAND;MAAA,eAOQpB,WAAW,CAACiC,KAPpB;MAAA,cAQOlC,KAAK,CAACI,GARb;MAAA,QASCJ,KAAK,CAACI,GAANJ,GAAY,KAAZA,GAAoBe;IATrB;MAeNsD,UAAU,EAAE,oOAfN;MAwBNxD,OAAO,EAAEY,KAAK,CAACZ;IAxBT,sCAUQ;MACZyD,OAAO,EAAEnC,IADG;MAEZzB,OAAO,EAAEV,KAAK,CAACU;IAFH,CAVR,EAaH,IAbG;MAAA6D;IAAA,IAAD,CAAT3E;IA4BA,OAAO;MACL+B,UADK;MAELC,KAFK;MAGLC,KAHK;MAILC,YAJK;MAKLC;IALK,CAAP;EAOD;;AA3QiC,CAAD,CAA5B","names":["VResponsive","intersect","makeTransitionProps","MaybeTransition","computed","nextTick","onBeforeMount","ref","vShow","watch","withDirectives","convertToUnit","defineComponent","SUPPORTS_INTERSECTION","useRender","VImg","name","directives","props","aspectRatio","String","Number","alt","cover","Boolean","eager","gradient","lazySrc","options","type","Object","default","root","undefined","rootMargin","threshold","sizes","src","srcset","width","emits","setup","emit","slots","_ref","currentSrc","image","state","naturalWidth","naturalHeight","normalisedSrc","aspect","value","init","isIntersecting","lazyImg","Image","pollForSize","_image$value2","complete","onError","onLoad","getSrc","img","timeout","poll","imgHeight","imgWidth","setTimeout","endsWith","startsWith","containClasses","__image","sources","_slots$sources","transition","__preloadImage","__placeholder","placeholder","error","__error","__gradient","backgroundImage","isBooted","stop","val","requestAnimationFrame","additional","handler","once"],"sources":["../../../src/components/VImg/VImg.tsx"],"sourcesContent":["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  defineComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport const VImg = defineComponent({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n    width: [String, Number],\n\n    ...makeTransitionProps(),\n  },\n\n  emits: ['loadstart', 'load', 'error'],\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null\n\n      const img = (\n        <img\n          class={['v-img__img', containClasses.value]}\n          src={ normalisedSrc.value.src }\n          srcset={ normalisedSrc.value.srcset }\n          alt=\"\"\n          sizes={ props.sizes }\n          ref={ image }\n          onLoad={ onLoad }\n          onError={ onError }\n        />\n      )\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __preloadImage = () => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt=\"\"\n          />\n        )}\n      </MaybeTransition>\n    )\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __error = () => {\n      if (!slots.error) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __gradient = () => {\n      if (!props.gradient) return null\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    }\n\n    const isBooted = ref(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => (\n      <VResponsive\n        class={[\n          'v-img',\n          { 'v-img--booting': !isBooted.value },\n        ]}\n        style={{ width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) }}\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n      >{{\n        additional: () => (\n          <>\n            <__image />\n            <__preloadImage />\n            <__gradient />\n            <__placeholder />\n            <__error />\n          </>\n        ),\n        default: slots.default,\n      }}</VResponsive>\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n"]},"metadata":{},"sourceType":"module"}